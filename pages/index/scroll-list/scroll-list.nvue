<template>
	<div>
		<div class="tabs">
			<div class="tab">
				<text v-for="(tab, index) in naviList" :key="index" 
					@click="clickItem(index,$event)" 
					class="tab-text" 
					:class="[index == selectIndex ? 'tab-text-on' : '']"
				>{{ tab }}</text>
			</div>
			<div class="border" :style="{ transform: 'translateX(' + offsetLeft + 'px)' }"></div>
		</div>
		<slider 
		indicator-dots="false" 
		autoplay="false" 
		interval="3000" 
		duration="0" 
		index = 'selectIndex' 
		@change="change"
		@scroll = "scroll"
		class="list_content"
		>
				<list class="list_item" v-for="(item,index) in naviList" 
				:key = 'index' 
				@scroll="scroll"
				ref = "item"
				>
				<refresh 
					@refresh="onrefresh"
					@pullingdown="onpulldown"
					:display="showRefresh ? 'show' : 'hide'"
					class="refresh"
				>
					<text class="indicator_text">刷新中...</text>
					<loading-indicator class="indicator"></loading-indicator>
				</refresh>
					<cell class="list_item_cell" v-for="(item,index) in list[index]" :key = 'index'>
						<text class="cell_text">{{item}}</text>
					</cell>
				</list>			
		</slider>
	</div>
</template>

<script>
		var modal = weex.requireModule("modal");
		const dom = weex.requireModule('dom')

		export default {
		data(){
			return{
				naviList:['全部','列表1','列表2','列表3','列表4','列表5'],
				offsetLeft:10,
				selectIndex:0,
				list:[['123','111','2222','3333','444'],['abc','sss'],['321'],['ddd','fff'],[],['eeee']],
				windowHeigt:0,
				windowWidth : 0,
				showRefresh : false
			}
		},
		mounted: function(e) {
			uni.getSystemInfo({
				success: (e) => {
					console.log(e);
					this.windowHeigt = e.screenHeight;
					this.windowWidth = e.screenWidth
					console.log(this.windowHeigt);
				}
			})
		},
		components:{
			
		},
		methods:{
			clickItem(index,e){
				console.log(index);
				this.selectIndex = index;
				this.offsetLeft =  e.position.x + 10;
				console.log(this.selectIndex);
			},
		
			change(e){
				console.log(e.index);
				if (e.index){
					this.offsetLeft = e.index * 750/this.naviList.length + 10 + 'px'
					this.selectIndex = e.index
				}else if(e.index === 0){
					this.offsetLeft = 10
					this.selectIndex = 0
				}
				console.log(this.offsetLeft);
			},
			scroll(e){
				setTimeout(function(){
					// console.log(this.selectIndex)
				},200)
				
			},
			onrefresh(e){
				this.showRefresh = true
				let that = this
				setTimeout(function(){
					that.showRefresh = false
				},2000)
				modal.toast({
					message:'下拉刷新弹窗测试',
					duration:1,
							
				})
			}
		}
	}
</script>

<style>
	.tabs {
		width: 750px;
		flex-direction: row;
		flex-wrap: wrap;
		height: 80px;
		align-items: center;
		background-color: #f8f8f8;
		align-items: center;
		
	}
	
	.tab {
		width: 750px;
		height: 76px;
		flex-direction: row;
		flex-wrap: wrap;
	}
	
	.tab-text {
		flex: 1;
		height: 76px;
		line-height: 76px;
		text-align: center;
		font-size: 16px;
		color: #444;
	}
	.tab-text-on {
		color: red;
		font-size: 20px;
	}
	.border {
		height: 2px;
		width: 70px;
		margin-left: 15px;
		background-color: red;
		transition-property: transform;
		transition-duration: 0.3s;
		transition-delay: 0s;
		transition-timing-function: ease;
	}
	.refresh {
		width: 750;
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}
	.indicator_text {
		text-align: center;
	}
	.indicator {
		height: 20px;
		width: 20px;
		color: #C0C0C0;
	}
	.list_content {
		height: 1000px;
		flex-direction: row;
		width: 750px;
	}
	.list_item {
		width: 750px;
	}
	.list_item_cell {
		margin: 10px;
		width: 730px;
		background-color: #00FFFF;
		border-radius: 5px;
		height: 300px;
	}
	.cell_text {
		color: #333333;
	}
</style>
